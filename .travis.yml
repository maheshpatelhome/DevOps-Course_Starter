language: python

services: docker

jobs: 
  include:
    - stage: test
      script:
      - docker build --target test --tag my-test-image .
      - docker run my-test-image ./todo_app/tests/todo_view_model_test.py
      - docker run --env-file ./.env.test my-test-image ./todo_app/tests/test_client.py
      - docker run -e USER_NAME -e PASSWORD -e MONGO_URL -e DEFAULT_DATABASE -e BOARD_NAME -e FLASK_APP -e FLASK_ENV -e SECRET_KEY my-test-image  todo_app/tests_e2e
    - stage: deploy
      if: (branch = main) AND (type = push)
       install: 
       - wget https://releases.hashicorp.com/terraform/"$TF_VERSION"/terraform_"$TF_VERSION"_linux_amd64.zip 
       - unzip terraform_"$TF_VERSION"_linux_amd64.zip 
       - sudo mv terraform /usr/local/bin/ 
       - rm terraform_"$TF_VERSION"_linux_amd64.zip 
       - terraform init  
      script:
      - echo $DOCKER_PASSWORD | docker login --username "$DOCKER_USERNAME" --password-stdin
      - docker build --target production --tag "$DOCKER_USERNAME"/todo-app-prod:"$TRAVIS_COMMIT" .
      - docker build --target production --tag "$DOCKER_USERNAME"/todo-app-prod:latest .
      - docker push "$DOCKER_USERNAME"/todo-app-prod:"$TRAVIS_COMMIT"
      - docker push "$DOCKER_USERNAME"/todo-app-prod:"latest"
      - docker pull "$DOCKER_USERNAME"/todo-app-prod:"latest"
      - docker tag $DOCKER_USERNAME"/todo-app-prod:latest" registry.heroku.com/maheshs-todo-app/web
      - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com 
      - docker push registry.heroku.com/maheshs-todo-app/web
      # - heroku container:release web -a maheshs-todo-app
      - terraform apply -var="prefix=test" -var="GITHUB_CLIENT_ID=$GITHUB_CLIENT_ID" -var="GITHUB_SECRET=$GITHUB_SECRET" -auto-approve
      - curl -dH -X POST "$(terraform output -raw cd_webhook)"